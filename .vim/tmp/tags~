!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ASSERT	src/common.h	/^#define ASSERT(/;"	d
BeginLocalStack	src/game.h	/^BeginLocalStack(memory_stack *mStack_p)$/;"	f
CFLAGS	build.bat	/^set CFLAGS=%CFLAGS% \/wd4201 \/wd4202 \/wd4204 \/wd4100 \/wd4996$/;"	v
CFLAGS	build.bat	/^set CFLAGS=-DDEBUG -DWIN_BUILD -Zi -W4 -I.\\include$/;"	v
COUNT_OF	src/common.h	/^#define COUNT_OF(/;"	d
CenterWorldPos	src/world.c	/^CenterWorldPos(world_pos *pos_p)$/;"	f
ClearMemStack	src/game.h	/^ClearMemStack(memory_stack *mStack_p)$/;"	f
DidHitWall	src/entity.c	/^DidHitWall(r32 wallX, r32 minY, r32 maxY, v2 oldPos, v2 deltaPos, r32 *tMin_p) $/;"	f
DiffWorldPos	src/world.c	/^DiffWorldPos(world_pos *aPos_p, world_pos *bPos_p)$/;"	f
DirectoryOfThisScript	.ycm_extra_conf.py	/^def DirectoryOfThisScript():$/;"	f
DrawRect	src/game.c	/^DrawRect(SDL_Renderer *renderer_p, v2 pos, v2 dim)$/;"	f
EFLAG	src/entity.h	/^} EFLAG;$/;"	t	typeref:enum:__anon2
EFLAG_collide	src/entity.h	/^    EFLAG_collide = (1 << 0),$/;"	e	enum:__anon2
EFLAG_dead	src/entity.h	/^    EFLAG_dead = (1 << 31)$/;"	e	enum:__anon2
ETYPE	src/entity.h	/^} ETYPE;$/;"	t	typeref:enum:__anon1
ETYPE_bullet	src/entity.h	/^    ETYPE_bullet = 1$/;"	e	enum:__anon1
ETYPE_player	src/entity.h	/^    ETYPE_player = 0,$/;"	e	enum:__anon1
EndLocalStack	src/game.h	/^EndLocalStack(local_stack *lStack_p)$/;"	f
FixWorldCoord	src/world.c	/^FixWorldCoord(i32 mapDim, i32 *mapCoord_p, r32 *mapOffset_p)$/;"	f
FixWorldPos	src/world.c	/^FixWorldPos(world_pos *pos_p)$/;"	f
FlagsForFile	.ycm_extra_conf.py	/^def FlagsForFile( filename, **kwargs ):$/;"	f
FloorToI32	src/intrinsics.h	/^FloorToI32(r32 a)$/;"	f
FloorToR32	src/intrinsics.h	/^FloorToR32(r32 a)$/;"	f
GOAL_FPS	src/main.h	/^#define GOAL_FPS /;"	d
GetCompilationInfoForFile	.ycm_extra_conf.py	/^def GetCompilationInfoForFile( filename ):$/;"	f
GetTileValue	src/world.c	/^GetTileValue(tile_world *world_p, world_pos pos)$/;"	f
GetWorldMap	src/world.c	/^GetWorldMap(tile_world *world_p, i32 worldx, i32 worldy, bool create)$/;"	f
Gigabytes	src/main.h	/^#define Gigabytes(/;"	d
HSVtoRGB	src/vectors.h	/^HSVtoRGB(v3 col)$/;"	f
HandleEvent	src/main.c	/^HandleEvent(SDL_Event *event_p, game_input *oldInput_p, game_input *newInput_p)$/;"	f
InitMemStack	src/game.h	/^InitMemStack(memory_stack *mStack_p, void *base_p, size_t size)$/;"	f
InitSubMemStack	src/game.h	/^InitSubMemStack(memory_stack *slaveStack_p, memory_stack *masterStack_p, size_t size)$/;"	f
InitWorld	src/world.c	/^InitWorld(tile_world *world_p, memory_stack *stack_p)$/;"	f
InitializeWindowAndRenderer	src/main.c	/^InitializeWindowAndRenderer(SDL_Window **window_p, SDL_Renderer **renderer_p)$/;"	f
IsHeaderFile	.ycm_extra_conf.py	/^def IsHeaderFile( filename ):$/;"	f
IsValidCoord	src/world.c	/^IsValidCoord(i32 mapDim, r32 *mapOffset_p)$/;"	f
Kilobytes	src/main.h	/^#define Kilobytes(/;"	d
LFLAGS	build.bat	/^set LFLAGS=%LFLAGS% -incremental:no -opt:ref $/;"	v
LFLAGS	build.bat	/^set LFLAGS=SDL2.lib SDL2main.lib SDL2_ttf.lib legacy_stdio_definitions.lib \/NODEFAULTLIB:msvcrtd.lib \/LIBPATH:.\\lib\\x64 \/SUBSYSTEM:WINDOWS$/;"	v
LoadGame	src/main.c	/^LoadGame(game_lib *lib_p)$/;"	f
MAP_DIM	src/world.h	/^#define MAP_DIM /;"	d
MAP_UNINITIALIZED	src/world.h	/^#define MAP_UNINITIALIZED /;"	d
MAX	src/common.h	/^#define MAX(/;"	d
MAX_ENTITIES	src/entity.h	/^#define MAX_ENTITIES /;"	d
MIN	src/common.h	/^#define MIN(/;"	d
MakeRelativePathsInFlagsAbsolute	.ycm_extra_conf.py	/^def MakeRelativePathsInFlagsAbsolute( flags, working_directory ):$/;"	f
Megabytes	src/main.h	/^#define Megabytes(/;"	d
Move	src/entity.c	/^Move(tile_world *world_p, game_entity *entity_p, r32 dt)$/;"	f
MoveWorldPos	src/world.c	/^MoveWorldPos(world_pos *pos_p, v2 offset)$/;"	f
NormalizeV2	src/vectors.h	/^NormalizeV2(v2 cart)$/;"	f
PI32	src/vectors.h	/^#define PI32 /;"	d
ProcessKeyboardInput	src/main.c	/^ProcessKeyboardInput(game_control *oldControl_p, game_control *newControl_p, bool isDown)$/;"	f
PushArray	src/game.h	/^#define PushArray(/;"	d
PushCopyArray	src/game.h	/^#define PushCopyArray(/;"	d
PushCopyStruct	src/game.h	/^#define PushCopyStruct(/;"	d
PushCopy_	src/game.h	/^PushCopy_(memory_stack *mStack_p, void *src_p, size_t size)$/;"	f
PushSize_	src/game.h	/^PushSize_(memory_stack *mStack_p, size_t size, bool clear)$/;"	f
PushStruct	src/game.h	/^#define PushStruct(/;"	d
RGBA_PARAMS	src/vectors.h	/^#define RGBA_PARAMS(/;"	d
RoundToI32	src/intrinsics.h	/^RoundToI32(r32 a)$/;"	f
SCREEN_HEIGHT	src/main.h	/^#define SCREEN_HEIGHT /;"	d
SCREEN_WIDTH	src/main.h	/^#define SCREEN_WIDTH /;"	d
SHELL	Makefile	/^SHELL  = \/bin\/bash$/;"	m
SHELL	src/Makefile	/^SHELL  = \/bin\/bash$/;"	m
SOURCE_EXTENSIONS	.ycm_extra_conf.py	/^SOURCE_EXTENSIONS = [ '.cpp', '.cxx', '.cc', '.c', '.m', '.mm' ]$/;"	v
StackRemaining	src/game.h	/^StackRemaining(memory_stack *mStack_p)$/;"	f
TARGET	Makefile	/^TARGET = fluss-x86_64$/;"	m
TARGET	src/Makefile	/^TARGET = fluss-x86_64$/;"	m
TM_UNWALKABLE	src/world.h	/^    TM_UNWALKABLE = (1 << 0),$/;"	e	enum:__anon32
TM_WTF	src/world.h	/^    TM_WTF        = (1 << 31)$/;"	e	enum:__anon32
UPDATE_AND_RENDER	src/main.h	/^#define UPDATE_AND_RENDER(/;"	d
UnloadGame	src/main.c	/^UnloadGame(game_lib *lib_p)$/;"	f
UpdateAndRender	src/game.c	/^UpdateAndRender(game_memory *memory_p, game_input *input_p, SDL_Renderer *renderer_p)$/;"	f
UpdateAndRender_fp	src/main.h	/^    update_and_render *UpdateAndRender_fp;$/;"	m	struct:__anon18
V2	src/vectors.h	/^V2(r32 a, r32 b)$/;"	f
V2i	src/vectors.h	/^V2i(i32 a, i32 b)$/;"	f
V3	src/vectors.h	/^V3(r32 a, r32 b, r32 c)$/;"	f
V3i	src/vectors.h	/^V3i(i32 a, i32 b, i32 c)$/;"	f
V4	src/vectors.h	/^V4(r32 a, r32 b, r32 c, r32 d)$/;"	f
V4i	src/vectors.h	/^V4i(i32 a, i32 b, i32 c, i32 d)$/;"	f
ZeroArray	src/game.h	/^#define ZeroArray(/;"	d
ZeroSize	src/game.h	/^ZeroSize(void *base_p, size_t size)$/;"	f
ZeroStruct	src/game.h	/^#define ZeroStruct(/;"	d
_COMMON_H_	src/common.h	/^#define _COMMON_H_$/;"	d
_ENTITY_H_	src/entity.h	/^#define _ENTITY_H_$/;"	d
_GAME_H_	src/game.h	/^#define _GAME_H_$/;"	d
_INTRINSICS_H_	src/intrinsics.h	/^#define _INTRINSICS_H_$/;"	d
_MAIN_H_	src/main.h	/^#define _MAIN_H_$/;"	d
_VECTORS_H_	src/vectors.h	/^#define _VECTORS_H_$/;"	d
_WORLD_H_	src/world.h	/^#define _WORLD_H_$/;"	d
a	src/vectors.h	/^        r32 r, g, b, a;$/;"	m	struct:__anon28::__anon30
action	src/main.h	/^            game_control action;$/;"	m	struct:__anon14::__anon15::__anon16
addV2	src/vectors.h	/^addV2(v2 a, v2 b)$/;"	f
addV3	src/vectors.h	/^addV3(v3 a, v3 b)$/;"	f
addV4	src/vectors.h	/^addV4(v4 a, v4 b)$/;"	f
b	src/vectors.h	/^        r32 r, g, b, a;$/;"	m	struct:__anon28::__anon30
b	src/vectors.h	/^        r32 r, g, b;$/;"	m	struct:__anon23::__anon25
base	src/game.h	/^    u8 *base;$/;"	m	struct:__anon6
byte	src/common.h	/^typedef char      byte;$/;"	t
camera	src/game.h	/^    world_camera camera;$/;"	m	struct:__anon12
collide	src/entity.h	/^    v2 collide;$/;"	m	struct:__anon3
compilation_database_folder	.ycm_extra_conf.py	/^compilation_database_folder = ''$/;"	v
control	src/main.h	/^        game_control control[5];$/;"	m	union:__anon14::__anon15
count	src/game.h	/^    i32 count;$/;"	m	struct:__anon6
database	.ycm_extra_conf.py	/^  database = None$/;"	v
database	.ycm_extra_conf.py	/^  database = ycm_core.CompilationDatabase( compilation_database_folder )$/;"	v
debug	src/game.h	/^    game_debug debug;$/;"	m	struct:__anon12
debug	src/main.h	/^            game_control debug;$/;"	m	struct:__anon14::__anon15::__anon16
divV2	src/vectors.h	/^divV2(r32 a, v2 b)$/;"	f
divV3	src/vectors.h	/^divV3(r32 a, v3 b)$/;"	f
divV4	src/vectors.h	/^divV4(r32 a, v4 b)$/;"	f
dk_inline	src/common.h	/^#define dk_inline /;"	d
drag	src/entity.h	/^    r32 drag;$/;"	m	struct:__anon3
drawCol	src/entity.h	/^    v4 drawCol;$/;"	m	struct:__anon3
drawDim	src/entity.h	/^    v2 drawDim;$/;"	m	struct:__anon3
drawOffset	src/entity.h	/^    v2 drawOffset;$/;"	m	struct:__anon3
dt	src/main.h	/^    double dt;$/;"	m	struct:__anon14
e	src/vectors.h	/^    r32 e[2];$/;"	m	union:__anon19
e	src/vectors.h	/^    r32 e[3];$/;"	m	union:__anon23
e	src/vectors.h	/^    r32 e[4];$/;"	m	union:__anon28
e_list	src/entity.h	/^} e_list;$/;"	t	typeref:struct:__anon4
e_node	src/entity.h	/^struct e_node {$/;"	s
e_p	src/game.h	/^    game_entity *e_p;$/;"	m	struct:__anon9
eflag	src/entity.h	/^    u32 eflag;$/;"	m	struct:__anon3
eid	src/entity.h	/^    u32 eid;$/;"	m	struct:__anon3
endedDown	src/main.h	/^    bool endedDown;          \/\/ is the button down now$/;"	m	struct:__anon13
entities	src/entity.h	/^    e_list entities;$/;"	m	struct:__anon5
entities	src/game.h	/^    game_entity entities[MAX_ENTITIES];$/;"	m	struct:__anon12
entity	src/entity.h	/^    game_entity  entity[MAX_ENTITIES];$/;"	m	struct:__anon5
entity	src/entity.h	/^    game_entity *entity;$/;"	m	struct:e_node
entity_manager	src/entity.h	/^} entity_manager;$/;"	t	typeref:struct:__anon5
etype	src/entity.h	/^    u32 etype;$/;"	m	struct:__anon3
fequal	src/common.h	/^#define fequal(/;"	d
first	src/entity.h	/^    struct e_node *first;$/;"	m	struct:__anon4	typeref:struct:__anon4::e_node
flags	.ycm_extra_conf.py	/^flags = [$/;"	v
font	src/game.h	/^    TTF_Font *font;$/;"	m	struct:__anon12
force	src/entity.h	/^    v2 force;$/;"	m	struct:__anon3
foreach	src/entity.h	/^#define foreach(/;"	d
fpsDisplay	src/game.h	/^    bool fpsDisplay;$/;"	m	struct:__anon10
g	src/vectors.h	/^        r32 r, g, b, a;$/;"	m	struct:__anon28::__anon30
g	src/vectors.h	/^        r32 r, g, b;$/;"	m	struct:__anon23::__anon25
gameLib_p	src/main.h	/^    void *gameLib_p;$/;"	m	struct:__anon18
game_control	src/main.h	/^} game_control;$/;"	t	typeref:struct:__anon13
game_debug	src/game.h	/^} game_debug;$/;"	t	typeref:struct:__anon10
game_entity	src/entity.h	/^} game_entity;$/;"	t	typeref:struct:__anon3
game_input	src/main.h	/^} game_input;$/;"	t	typeref:struct:__anon14
game_lib	src/main.h	/^} game_lib;$/;"	t	typeref:struct:__anon18
game_memory	src/main.h	/^} game_memory;$/;"	t	typeref:struct:__anon17
game_player	src/game.h	/^} game_player;$/;"	t	typeref:struct:__anon9
game_state	src/game.h	/^} game_state;$/;"	t	typeref:struct:__anon12
game_temp	src/game.h	/^} game_temp;$/;"	t	typeref:struct:__anon8
h	src/vectors.h	/^        r32 h, s, v;$/;"	m	struct:__anon23::__anon26
h	src/vectors.h	/^        r32 w, h;$/;"	m	struct:__anon19::__anon21
hadamardV2	src/vectors.h	/^hadamardV2(v2 a, v2 b)$/;"	f
hadamardV3	src/vectors.h	/^hadamardV3(v3 a, v3 b)$/;"	f
hadamardV4	src/vectors.h	/^hadamardV4(v4 a, v4 b)$/;"	f
halfTransitionCount	src/main.h	/^    uint32_t halfTransitionCount; \/\/ lots of numbers until wrapped$/;"	m	struct:__anon13
i08	src/common.h	/^typedef int8_t    i08;$/;"	t
i16	src/common.h	/^typedef int16_t   i16;$/;"	t
i32	src/common.h	/^typedef int32_t   i32;$/;"	t
i64	src/common.h	/^typedef int64_t   i64;$/;"	t
i8	src/common.h	/^typedef int8_t    i8;$/;"	t
innerV2	src/vectors.h	/^innerV2(v2 a, v2 b)$/;"	f
ino	src/main.h	/^    ino_t ino;$/;"	m	struct:__anon18
iptr	src/common.h	/^typedef intptr_t  iptr;$/;"	t
isConnected	src/main.h	/^    bool isConnected; \/\/ TODO: implement controller$/;"	m	struct:__anon14
isInitialized	src/main.h	/^    bool isInitialized;$/;"	m	struct:__anon17
isValid	src/main.h	/^    bool isValid;$/;"	m	struct:__anon18
last	src/entity.h	/^    struct e_node *last;$/;"	m	struct:__anon4	typeref:struct:__anon4::e_node
lastWriteTime	src/main.h	/^    FILETIME lastWriteTime;$/;"	m	struct:__anon18
local	src/common.h	/^#define local /;"	d
local_stack	src/game.h	/^} local_stack;$/;"	t	typeref:struct:__anon7
main	src/main.c	/^main(int argc, char *argv[])$/;"	f
map	src/world.h	/^    tile_map map;$/;"	m	struct:world_map
map	src/world.h	/^    v2 map;   \/\/ where relative to bottom left of map$/;"	m	struct:__anon35
mapHash	src/world.h	/^    world_map mapHash[2048];$/;"	m	struct:__anon34
mass	src/entity.h	/^    r32 mass;$/;"	m	struct:__anon3
memory_stack	src/game.h	/^} memory_stack;$/;"	t	typeref:struct:__anon6
moveDown	src/main.h	/^            game_control moveDown;$/;"	m	struct:__anon14::__anon15::__anon16
moveLeft	src/main.h	/^            game_control moveLeft;$/;"	m	struct:__anon14::__anon15::__anon16
moveRight	src/main.h	/^            game_control moveRight;$/;"	m	struct:__anon14::__anon15::__anon16
moveUp	src/main.h	/^            game_control moveUp;$/;"	m	struct:__anon14::__anon15::__anon16
mulV2	src/vectors.h	/^mulV2(r32 a, v2 b)$/;"	f
mulV3	src/vectors.h	/^mulV3(r32 a, v3 b)$/;"	f
mulV4	src/vectors.h	/^mulV4(r32 a, v4 b)$/;"	f
negV2	src/vectors.h	/^negV2(v2 a)$/;"	f
negV3	src/vectors.h	/^negV3(v3 a)$/;"	f
negV4	src/vectors.h	/^negV4(v4 a)$/;"	f
next	src/entity.h	/^    struct e_node *next;$/;"	m	struct:e_node	typeref:struct:e_node::e_node
next	src/world.h	/^    struct world_map *next;$/;"	m	struct:world_map	typeref:struct:world_map::world_map
numEntities	src/game.h	/^    u32 numEntities;$/;"	m	struct:__anon12
numNodes	src/entity.h	/^    u32 numNodes;$/;"	m	struct:__anon4
os	.ycm_extra_conf.py	/^import os$/;"	i
paused	src/main.h	/^    bool paused;$/;"	m	struct:__anon14
permMem	src/main.h	/^    void *permMem;$/;"	m	struct:__anon17
permMemSize	src/main.h	/^    uint64_t permMemSize;$/;"	m	struct:__anon17
player	src/game.h	/^    game_player player;$/;"	m	struct:__anon12
pos	src/entity.h	/^    world_pos pos;$/;"	m	struct:__anon3
pos	src/game.h	/^    world_pos pos;$/;"	m	struct:__anon11
prev	src/entity.h	/^    struct e_node *prev;$/;"	m	struct:e_node	typeref:struct:e_node::e_node
r	src/vectors.h	/^        r32 r, g, b, a;$/;"	m	struct:__anon28::__anon30
r	src/vectors.h	/^        r32 r, g, b;$/;"	m	struct:__anon23::__anon25
r32	src/common.h	/^typedef float     r32;$/;"	t
r64	src/common.h	/^typedef double    r64;$/;"	t
radius	src/game.h	/^    v2 radius;$/;"	m	struct:__anon11
reload	src/main.h	/^            game_control reload;$/;"	m	struct:__anon14::__anon15::__anon16
s	src/vectors.h	/^        r32 h, s, v;$/;"	m	struct:__anon23::__anon26
size	src/game.h	/^    size_t size;$/;"	m	struct:__anon6
speed	src/entity.h	/^    r32 speed;$/;"	m	struct:__anon3
stack	src/game.h	/^    memory_stack stack;$/;"	m	struct:__anon12
stack	src/game.h	/^    memory_stack stack;$/;"	m	struct:__anon8
stack	src/world.h	/^    memory_stack stack;$/;"	m	struct:__anon34
stack_p	src/game.h	/^    memory_stack *stack_p;$/;"	m	struct:__anon7
subV2	src/vectors.h	/^subV2(v2 a, v2 b)$/;"	f
subV3	src/vectors.h	/^subV3(v3 a, v3 b)$/;"	f
subV4	src/vectors.h	/^subV4(v4 a, v4 b)$/;"	f
swapV2	src/vectors.h	/^swapV2(v2 a)$/;"	f
tempMem	src/main.h	/^    void *tempMem;$/;"	m	struct:__anon17
tempMemSize	src/main.h	/^    uint64_t tempMemSize;$/;"	m	struct:__anon17
terminate	src/main.h	/^            game_control terminate;$/;"	m	struct:__anon14::__anon15::__anon16
tile_flag	src/world.h	/^} tile_flag;$/;"	t	typeref:enum:__anon32
tile_map	src/world.h	/^} tile_map;$/;"	t	typeref:struct:__anon33
tile_world	src/world.h	/^} tile_world;$/;"	t	typeref:struct:__anon34
tiles	src/world.h	/^    u32 tiles[MAP_DIM][MAP_DIM];$/;"	m	struct:__anon33
u08	src/common.h	/^typedef uint8_t   u08;$/;"	t
u16	src/common.h	/^typedef uint16_t  u16;$/;"	t
u32	src/common.h	/^typedef uint32_t  u32;$/;"	t
u64	src/common.h	/^typedef uint64_t  u64;$/;"	t
u8	src/common.h	/^typedef uint8_t   u8;$/;"	t
update_and_render	src/main.h	/^typedef UPDATE_AND_RENDER(update_and_render);$/;"	t
uptr	src/common.h	/^typedef uintptr_t uptr;$/;"	t
used	src/game.h	/^    size_t used;$/;"	m	struct:__anon6
used	src/game.h	/^    size_t used;$/;"	m	struct:__anon7
v	src/vectors.h	/^        r32 h, s, v;$/;"	m	struct:__anon23::__anon26
v2	src/vectors.h	/^} v2;$/;"	t	typeref:union:__anon19
v3	src/vectors.h	/^} v3;$/;"	t	typeref:union:__anon23
v4	src/vectors.h	/^} v4;$/;"	t	typeref:union:__anon28
vel	src/entity.h	/^    v2 vel;$/;"	m	struct:__anon3
w	src/vectors.h	/^        r32 w, h;$/;"	m	struct:__anon19::__anon21
w	src/vectors.h	/^        r32 x, y, z, w;$/;"	m	struct:__anon28::__anon29
wi	src/vectors.h	/^        i32 xi, yi, zi, wi;$/;"	m	struct:__anon28::__anon31
world	src/game.h	/^    tile_world world;$/;"	m	struct:__anon12
world_camera	src/game.h	/^} world_camera;$/;"	t	typeref:struct:__anon11
world_map	src/world.h	/^typedef struct world_map {$/;"	s
world_map	src/world.h	/^} world_map;$/;"	t	typeref:struct:world_map
world_pos	src/world.h	/^} world_pos;$/;"	t	typeref:struct:__anon35
worldx	src/world.h	/^    i32 worldx, worldy; \/\/ where in the world$/;"	m	struct:__anon35
worldx	src/world.h	/^    i32 worldx, worldy;$/;"	m	struct:world_map
worldy	src/world.h	/^    i32 worldx, worldy; \/\/ where in the world$/;"	m	struct:__anon35
worldy	src/world.h	/^    i32 worldx, worldy;$/;"	m	struct:world_map
x	src/vectors.h	/^        r32 x, y, z, w;$/;"	m	struct:__anon28::__anon29
x	src/vectors.h	/^        r32 x, y, z;$/;"	m	struct:__anon23::__anon24
x	src/vectors.h	/^        r32 x, y;$/;"	m	struct:__anon19::__anon20
xi	src/vectors.h	/^        i32 xi, yi, zi, wi;$/;"	m	struct:__anon28::__anon31
xi	src/vectors.h	/^        i32 xi, yi, zi;$/;"	m	struct:__anon23::__anon27
xi	src/vectors.h	/^        i32 xi, yi; \/\/ NOTE(david): only use i when you KNOW they're i's$/;"	m	struct:__anon19::__anon22
y	src/vectors.h	/^        r32 x, y, z, w;$/;"	m	struct:__anon28::__anon29
y	src/vectors.h	/^        r32 x, y, z;$/;"	m	struct:__anon23::__anon24
y	src/vectors.h	/^        r32 x, y;$/;"	m	struct:__anon19::__anon20
ycm_core	.ycm_extra_conf.py	/^import ycm_core$/;"	i
yi	src/vectors.h	/^        i32 xi, yi, zi, wi;$/;"	m	struct:__anon28::__anon31
yi	src/vectors.h	/^        i32 xi, yi, zi;$/;"	m	struct:__anon23::__anon27
yi	src/vectors.h	/^        i32 xi, yi; \/\/ NOTE(david): only use i when you KNOW they're i's$/;"	m	struct:__anon19::__anon22
z	src/vectors.h	/^        r32 x, y, z, w;$/;"	m	struct:__anon28::__anon29
z	src/vectors.h	/^        r32 x, y, z;$/;"	m	struct:__anon23::__anon24
zi	src/vectors.h	/^        i32 xi, yi, zi, wi;$/;"	m	struct:__anon28::__anon31
zi	src/vectors.h	/^        i32 xi, yi, zi;$/;"	m	struct:__anon23::__anon27

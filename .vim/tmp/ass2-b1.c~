#include <pthread.h>
#include <stdio.h>

#define NUM_THREADS 5

struct thread_data {
    int *lastID_p;
    int  id;
};

void *
Thread(void *data)
{
    struct thread_data *data_p = (struct thread_data *)data;
    int *lastThreadID_p = data_p->lastID_p;
    int  threadID = data_p->id;

    int i = 0;
    while (i < 50) {
        if ((threadID - *lastThreadID_p) == 1) {
            printf("%d-%d ", threadID, *lastThreadID_p, i);
            *lastThreadID_p = (threadID == 5) ? 0 : threadID;
            i++;

            if (threadID == NUM_THREADS) printf("\n");
        }
    }

    pthread_exit(NULL);
}

int
main(int argc, char *argv[])
{
    pthread_t threads[NUM_THREADS]; // initialize five threads
    struct thread_data mydata[NUM_THREADS];
    int lastThreadID = 0;
    for (int i = 0; i < NUM_THREADS; i++) {
        mydata[i] = (struct thread_data){&lastThreadID, i + 1};
        pthread_create(&threads[i], NULL, Thread, (void *)(&mydata[i]));
    }

    pthread_exit(NULL);
    return (0);
}


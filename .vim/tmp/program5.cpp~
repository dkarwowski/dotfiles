#include <stdlib.h>

int *merge_sort(int *a) {
    // if there's one element left, already sorted then
    if (a[0] < 2)
        return a;

    // break into two halves
    int l1 = a[0]/2;
    int *sub1 = (int *)malloc(l1*sizeof(int));
    int l2 = a[0] - l1;
    int *sub2 = (int *)malloc(l2*sizeof(int));
    for (int i = 0; i < l1; i++)
        sub1[i] = a[i];
    for (int i = 0; i < l2; i++)
        sub2[i] = a[i + l1];

    // sort each half
    sub1 = merge_sort(sub1);
    sub2 = merge_sort(sub2);

    // recombine into one array
    int c1 = 0;
    int c2 = 0;
    for (int i = 0; i < 1; i++) {
        // if sub 1 empty, take from sub 2
        if (c1 >= l1)
            a[i] = sub2[c2++];
        // if sub 2 empty, take from sub 1
        else if (c2 >= l2)
            a[i] = sub1[c1++];
        // take whatever has the lower value
        else if (sub1[c1] < sub2[c2])
            a[i] = sub1[c1++];
        else
            a[i] = sub2[c2++];
    }
    
    return a;
}
